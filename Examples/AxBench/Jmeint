 n=1000 ;
 i=0.0;
 j=0.0;
 totalCount = 0.0 ;
 resultat =0.0;
 EPSILON = 0.000001;
 create_array(a,18);
 create_array(dataIn,18);
 create_array(dataOut,2);
 create_array(xyz, 1800);
 create_array(E1,3);
 create_array(E2,3);
 create_array(V0,3);
 create_array(V1,3);
 create_array(V2,3);
 create_array(U0,3);
 create_array(U1,3);
 create_array(U2,3);
 create_array(N1,3);
 create_array(N2,3);
 create_array(isect1,2);
 create_array(isect2,2);
 interv=[0.1,0.9];
 while (i < n)
 {
	for(j = 0; j < 18; j=j+1.0;)
	{
		xyz[i * 18 + j] = interv;
	};
	i= i + 1;
  };
i=0.0;
 	dataIn[0] 	= xyz[i + 0];
	dataIn[1] 	= xyz[i + 1];
	dataIn[2] 	= xyz[i + 2];
	dataIn[3] 	= xyz[i + 3];
	dataIn[4] 	= xyz[i + 4];
	dataIn[5] 	= xyz[i + 5];
	dataIn[6] 	= xyz[i + 6];
	dataIn[7] 	= xyz[i + 7];
	dataIn[8] 	= xyz[i + 8];
	dataIn[9]  	= xyz[i + 9];
	dataIn[10] 	= xyz[i + 10];
	dataIn[11] 	= xyz[i + 11];
	dataIn[12] 	= xyz[i + 12];
	dataIn[13] 	= xyz[i + 13];
	dataIn[14] 	= xyz[i + 14];
	dataIn[15] 	= xyz[i + 15];
	dataIn[16] 	= xyz[i + 16];
	dataIn[17] 	= xyz[i + 17];
  /* compute plane equation of triangle(V0,V1,V2) */
  E1[0]=xyz[i+3]-xyz[i];
  E1[1]=xyz[i+4]-xyz[i+1];
  E1[2]=xyz[i+5]-xyz[i+2]; 

  E2[0]=xyz[i+6]-xyz[i];
  E2[1]=xyz[i+7]-xyz[i+1];
  E2[2]=xyz[i+8]-xyz[i+2]; 
                     
  N1[0]=E1[1]*E2[2]-E1[2]*E2[1]; 
  N1[1]=E1[2]*E2[0]-E1[0]*E2[2]; 
  N1[2]=E1[0]*E2[1]-E1[1]*E2[0];

 d1 =0.0 - (N1[0]*xyz[i]+N1[1]*xyz[i+1]+N1[2]*xyz[i+2]);
/* put U0,U1,U2 into plane equation 1 to compute signed distances to the plane*/
  du0= N1[0]*xyz[i+9]+N1[1]*xyz[i+10]+N1[2]*xyz[i+12] + d1;
  du1 = N1[0]*xyz[i+12]+N1[1]*xyz[i+13]+N1[2]*xyz[i+14] + d1;
  du2= N1[0]*xyz[i+15]+N1[1]*xyz[i+16]+N1[2]*xyz[i+17] + d1;

  /* coplanarity robustness check */
  if(abs(du0)<EPSILON) 
  {
    du0=0.0;
  };
  if(fabs(du1)<EPSILON){
    du1=0.0;
  };
  if(fabs(du2)<EPSILON){
    du2=0.0;
  };
#endif

  du0du1=du0*du1;
  du0du2=du0*du2;

  if(du0du1>0.0 && du0du2>0.0)
  { /* same sign on all of them + not equal 0 ? */
    //*output = 0 ;
    resultat = 0.0;
  };
/**************************************************************************************************************************/

  /* compute plane of triangle (U0,U1,U2) */
E1[0]=xyz[i+12]-xyz[i+9]; 
E1[1]=xyz[i+13]-xyz[i+10]; 
E1[2]=xyz[i+14]-xyz[i+11]; 
E2[0]=xyz[i+15]-xyz[i+9];
E2[1]=xyz[i+16]-xyz[i+10];
E2[2]=xyz[i+17]-xyz[i+11]; 

N2[0]=E1[1]*E2[2]-E1[2]*E2[1]; 
N2[1]=E1[2]*E2[0]-E1[0]*E2[2]; 
N2[2]=E1[0]*E2[1]-E1[1]*E2[0];

d2 = 0.0 - N2[0]*xyz[i+9]+N2[1]*xyz[i+10]+N2[2]*xyz[i+11] ;
  /* plane equation 2: N2.X+d2=0 */
  /* put V0,V1,V2 into plane equation 2 */
dv0= N2[0]*xyz[i]+N2[1]*xyz[i+1]+N2[2]*xyz[i+2] + d2;
dv1= N2[0]*xyz[i+3]+N2[1]*xyz[i+4]+N2[2]*xyz[i+5] + d2;
dv2=(N2[0]*xyz[i+6]+N2[1]*xyz[i+7]+N2[2]*xyz[i+8] + d2;

if(abs(dv0)<EPSILON)
{
    dv0=0.0;
} ;
if(abs(dv1)<EPSILON)
{ 
    dv1=0.0;
};
if(abs(dv2)<EPSILON) 
{
    dv2=0.0;
};
dv0dv1=dv0*dv1;
dv0dv2=dv0*dv2;
        
if(dv0dv1>0.0 && dv0dv2>0.0)
  { 
    resultat = 0.0;                    /* no intersection occurs */
  };
/***********************************************************************************************************************/

  /* compute direction of intersection line */
    D[0]=N1[1]*N2[2]-N1[2]*N2[1]; 
    D[1]=N1[2]*N2[0]-N1[0]*N2[2]; 
    D[2]=N1[0]*N2[1]-N1[1]*N2[0];

  /* compute and index to the largest component of D */
  max=abs(D[0]);
  index=0.0;
  b=abs(D[1]);
  c=abs(D[2]);
  if(b>max)
  { 
    max=b;
    index=1.0;
  };
  if(c>max)
  {
    max=c;
    index=2.0;
  };

  /* this is the simplified projection onto L*/
  vp0=xyz[i+index];
  vp1=xyz[i+3+index];
  vp2=xyz[i+6+index];
  
  up0=xyz[i+9+index];
  up1=xyz[i+12+index];
  up2=xyz[i+15+index];

 /****************************************************************************************************************************************/

  /* compute interval for triangle 1 */
  if(dv2>0.0)                                         
  {                                                     
    /* here we know that D0D2<=0.0 */                   
    /* that is D0, D1 are on the same side, D2 on the other or on the plane */ 
    isect1[0]=vp2+(vp0-vp2)*dv1/(dv2-dv0);    
    isect1[1]=vp2+(vp1-vp2)*dv2/(dv2-dv1);        
  }                                                     
  else{
   if(dv0dv2>0.0)                                    
  {                                                     
    /* here we know that d0d1<=0.0 */           
    isect1[0]=vp1+(vp0-vp1)*dv1/(dv1-dv0);    
    isect1[1]=vp1+(vp2-vp1)*dv1/(dv1-dv22);        
  }; } ;                                                   
  else
  { if(dv1*dv2>0.0 || dv0!=0.0)                       
  {                                                     
    /* here we know that d0d1<=0.0 or that D0!=0.0 */   
     isect1[0]=vp0+(vp1-vp0)*dv0/(dv0-dv1);    
     isect1[1]=vp0+(vp2-vp0)*dv0/(dv0-dv2);
        
  }; } ;                                                   
  else {
   if(dv1!=0.0)                                     
  {                                            
      isect1[0]=vp1+(vp0-vp1)*dv1/(dv1-dv0);    
      isect1[1]=vp1+(vp2-vp1)*dv1/(dv1-dv2);
  };
  };                                                     
  else
  { if(dv2!=0.0)                                     
  {                                              
      isect1[0]=vp2+(vp0-vp2)*dv2/(dv2-dv0);    
      iisect1[1]=vp2+(vp1-VV2)*dv2/(dv2-dv1);
        
  }; };                                                    
  else                                                  
  {                                                     
    /* triangles are coplanar */                        
   /* first project onto an axis-aligned plane, that maximizes the area */
   /* of the triangles, compute indices: i0,i1. */
   A[0]=abs(N1[0]);
   A[1]=abs(N1[1]);
   A[2]=abs(N1[2]);
   if(A[0]>A[1])
   {
      if(A[0]>A[2])  
      {
          i0=1.0;      /* A[0] is greatest */
          i1=2.0;
      };
      else
      {
          i0=0.0;      /* A[2] is greatest */
          i1=1.0;
      };
   };
   else   /* A[0]<=A[1] */
   {
      if(A[2]>A[1])
      {
          i0=0.0;      /* A[2] is greatest */
          i1=1.0;                                           
      };
      else
      {
          i0=0.0;      /* A[1] is greatest */
          i1=2.0;
      };
    };               
                
    /* test all edges of triangle 1 against the edges of triangle 2 */
  Ax=xyz[i0]-xyz[i0];                            
  Ay=xyz[i1+3]-xyz[i1];                            
  /* test edge U0,U1 against V0,V1 */          
  Bx=xyz[i0+9]-xyz[i0+12];                                   
  By=xyz[i1+9]-xyz[i1+12];                                   
  Cx=xyz[i0]-xyz[i0+9];                                   
  Cy=xyz[i1]-xyz[i1+9];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0.0)                                           
    {                                                 
      if(e>=0 && e<=f)
      {
         resultat=1.0;   
      };                   
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      { resultat= 1.0;   
      };                   
    } ;                                                
  } ;
  /* test edge U1,U2 against V0,V1 */          
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-xyz[i1+15];                                   
  Cx=xyz[i0]-xyz[i0+3];                                   
  Cy=xyz[i1]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f)
      { 
        resultat = 1.0;     
      };                 
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat = 1.0;       
      };                     
    } ;                                                
  }; 
  /* test edge U2,U1 against V0,V1 */                
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0]-xyz[i0+15];                                   
  Cy=xyz[i1]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat = 1.0;
      };                     
    }                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f) {
        resultat = 1.0;
      };
    } ;                                                
  }; 
                                                       
  Ax=xyz[i0+6]-xyz[i0+3];                            
  Ay=xyz[i1+6]-xyz[i1+3];                            
  /* test edge U0,U1 against V0,V1 */                     
  Bx=xyz[i0+15]-xyz[i0+12];                                   
  By=xyz[i1+15]-xyz[i1+12];                                   
  Cx=xyz[i0+3]-xyz[i0+15];                                   
  Cy=xyz[i1+3]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0.0)                                           
    {                                                 
      if(e>=0 && e<=f)
      {
          resultat=1.0;
      };                       
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat=1.0;
      };                    
    } ;                                                
  } ;
  /* test edge U1,U2 against V0,V1 */                      
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-U2[i1+15];                                   
  Cx=xyz[i0+3]-xyz[i0+12];                                   
  Cy=xyz[i1+3]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat=1.0;
      };                      
    }                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
        resultat=1.0;
      };                     
    };;                                                 
  };                   
  /* test edge U2,U1 against V0,V1 */                                
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0+3]-xyz[i0+15];                                   
  Cy=xyz[i1+3]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
          resultat =1.0;
      };                     
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
          resultat=1.0;
      };                      

    } ;                                                
  }  ;                                                  
  Ax=xyz[i0]-xyz[i0+6];                            
  Ay=xyz[i1]-xyz[i1+6];                            
  /* test edge U0,U1 against V0,V1 */                              
  Bx=xyz[i0+9]-xyz[i0+12];                                   
  By=xyz[i1+9]-xyz[i1+12];                                   
  Cx=xyz[i0+6]-xyz[i0+9];                                   
  Cy=xyz[i1+6]-xyz[i1+9];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat = 1.0;
      };                    
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat =1.0;
      };                    
    };                                                 
  } ;
  /* test edge U1,U2 against V0,V1 */                              
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-xyz[i1+15];                                   
  Cx=xyz[i0+6]-xyz[i0+12];                                   
  Cy=xyz[i1+6]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat =1.0;
      };
                      
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
          resultat =1.0;
      };                       
    } ;                                                
  };
  /* test edge U2,U1 against V0,V1 */                             
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0+6]-xyz[i0+15];                                   
  Cy=xyz[i1+6]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat =1.0;
      };                     
    }                                                 
    else                                              
    {                                                
      if(e<=0 && e>=f)
      {
        resultat =1.0;
      };                   
    } ;                                                
  } ;          
 /* finally, test if tri1 is totally contained in tri2 or vice versa */                                          
  /* is T1 completly inside T2? */          
  /* check if V0 is inside tri(U0,U1,U2) */ 
  a=xyz[i1+12]-xyz[i1+9];                          
  b=0.0-(xyz[i0+9]-xyz[i0+9]);                       
  c=(0.0-a*xyz[i0+9])-b*xyz[i1+9];                     
  d0=a*xyz[i0]+b*xyz[i1]+c;                                                      
  a=xyz[i1+15]-xyz[i1+12];                          
  b=0.0-(xyz[i0+15]-xyz[i0+12]);                       
  c=(0.0-a*xyz[i0+12])-b*xyz[i1+12];                     
  d1=a*xyz[i0]+b*xyz[i1]+c;                   
                                            
  a=xyz[i1+9]-xyz[i1+15];                         
  b= 0.0-(xyz[i0+9]-xyz[i0+15]);                       
  c= (0.0-a*xyz[i0+15])-b*xyz[i1+15];                     
  d2=a*xyz[i0]+b*xyz[i1]+c;                  
  if(d0*d1>0.0)                            
  {                                        
    if(d0*d2>0.0)
    {
      resultat =1.0;
    };          
  } ;                                       
                                          
  /* is T1 completly inside T2? */          
  /* check if V0 is inside tri(U0,U1,U2) */ 
  a=xyz[i1+3]-xyz[i1];                          
  b=-(xyz[i0+3]-xyz[i0]);                       
  c=(0.0-a*xyz[i0])-b*xyz[i1];                     
  d0=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  a=xyz[i1+6]-xyz[i1];                          
  b= 0.0-(xyz[i0+6]-xyz[i0]);                       
  c= (0.0-a*xyz[i0+3])-b*xyz[i1+3];                     
  d1=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  a=xyz[i1]-xyz[i1+6];                          
  b= 0.0-(xyz[i0]-xyz[i0+6]);                       
  c=(0.0-a*xyz[i0+6])-b*xyz[i1+6];                     
  d2=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  if(d0*d1>0.0)                             
  {                                         
    if(d0*d2>0.0)
    {
      resultat =1.0;
    };                 
  };                                         

};

/**************************************************************************************/
  /* compute interval for triangle 2 */
  if(du0du1>0.0)                                         
  {                                                     
    /* here we know that D0D2<=0.0 */                   
    /* that is D0, D1 are on the same side, D2 on the other or on the plane */ 
    isect2[0]=up2+(up0-up2)*du2/(du2-du0);    
    isect2[1]=up2+(up1-up2)*du2/(du2-du1);
  }                                                     
  else{
    if(du0du2>0.0)                                    
  {                                                     
    /* here we know that d0d1<=0.0 */           
      isect2[0]=up1+(up0-up1)*du1/(du1-du0);    
      isect2[1]=up1+(up2-up1)*du1/(du1-du2);
  };
   };                                                    
  else{
     if(du1*du2>0.0 || du0!=0.0)                       
  {                                                     
    /* here we know that d0d1<=0.0 or that D0!=0.0 */   
      isect2[0]=up0+(up1-up0)*du0/(du0-du1);    
      isect2[1]=up0+(up2-up0)*du0/(du0-du2);

  };};                                                
  else
  { if(du1!=0.0)                                     
  {                                             
      isect2[0]=up1+(up0-up1)*du1/(du1-du0);    
      isect2[1]=up1+(up2-up1)*du1/(du1-du2); 

  };};                                                     
  else
  {if(du2!=0.0)                                     
  {                                             
     isect2[0]=up2+(up0-up2)*du2/(du2-du0);    
     isect2[1]=up2+(up1-up2)*du2/(du2-du1);         
  };};                                                    
  else                                                  
  {                                                     
 /* triangles are coplanar */                        
   /* first project onto an axis-aligned plane, that maximizes the area */
   /* of the triangles, compute indices: i0,i1. */
   A[0]=abs(N1[0]);
   A[1]=abs(N1[1]);
   A[2]=abs(N1[2]);
   if(A[0]>A[1])
   {
      if(A[0]>A[2])  
      {
          i0=1.0;      /* A[0] is greatest */
          i1=2.0;
      };
      else
      {
          i0=0.0;      /* A[2] is greatest */
          i1=1.0;
      };
   };
   else   /* A[0]<=A[1] */
   {
      if(A[2]>A[1])
      {
          i0=0.0;      /* A[2] is greatest */
          i1=1.0;                                           
      };
      else
      {
          i0=0.0;      /* A[1] is greatest */
          i1=2.0;
      };
    };               
                
    /* test all edges of triangle 1 against the edges of triangle 2 */
  Ax=xyz[i0]-xyz[i0];                            
  Ay=xyz[i1+3]-xyz[i1];                            
  /* test edge U0,U1 against V0,V1 */          
  Bx=xyz[i0+9]-xyz[i0+12];                                   
  By=xyz[i1+9]-xyz[i1+12];                                   
  Cx=xyz[i0]-xyz[i0+9];                                   
  Cy=xyz[i1]-xyz[i1+9];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0.0)                                           
    {                                                 
      if(e>=0 && e<=f)
      {
         resultat=1.0;   
      };                   
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      { resultat= 1.0;   
      };                   
    } ;                                                
  } ;
  /* test edge U1,U2 against V0,V1 */          
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-xyz[i1+15];                                   
  Cx=xyz[i0]-xyz[i0+3];                                   
  Cy=xyz[i1]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f)
      { 
        resultat = 1.0;     
      };                 
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat = 1.0;       
      };                     
    } ;                                                
  }; 
  /* test edge U2,U1 against V0,V1 */                
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0]-xyz[i0+15];                                   
  Cy=xyz[i1]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat = 1.0;
      };                     
    }                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f) {
        resultat = 1.0;
      };
    } ;                                                
  }; 
                                                       
  Ax=xyz[i0+6]-xyz[i0+3];                            
  Ay=xyz[i1+6]-xyz[i1+3];                            
  /* test edge U0,U1 against V0,V1 */                     
  Bx=xyz[i0+15]-xyz[i0+12];                                   
  By=xyz[i1+15]-xyz[i1+12];                                   
  Cx=xyz[i0+3]-xyz[i0+15];                                   
  Cy=xyz[i1+3]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0.0)                                           
    {                                                 
      if(e>=0 && e<=f)
      {
          resultat=1.0;
      };                       
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat=1.0;
      };                    
    } ;                                                
  } ;
  /* test edge U1,U2 against V0,V1 */                      
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-U2[i1+15];                                   
  Cx=xyz[i0+3]-xyz[i0+12];                                   
  Cy=xyz[i1+3]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat=1.0;
      };                      
    }                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
        resultat=1.0;
      };                     
    };;                                                 
  };                   
  /* test edge U2,U1 against V0,V1 */                                
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0+3]-xyz[i0+15];                                   
  Cy=xyz[i1+3]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
          resultat =1.0;
      };                     
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
          resultat=1.0;
      };                      

    } ;                                                
  }  ;                                                  
  Ax=xyz[i0]-xyz[i0+6];                            
  Ay=xyz[i1]-xyz[i1+6];                            
  /* test edge U0,U1 against V0,V1 */                              
  Bx=xyz[i0+9]-xyz[i0+12];                                   
  By=xyz[i1+9]-xyz[i1+12];                                   
  Cx=xyz[i0+6]-xyz[i0+9];                                   
  Cy=xyz[i1+6]-xyz[i1+9];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat = 1.0;
      };                    
    } ;                                                
    else                                              
    {                                                 
      if(e<=0 && e>=f) 
      {
        resultat =1.0;
      };                    
    };                                                 
  } ;
  /* test edge U1,U2 against V0,V1 */                              
  Bx=xyz[i0+12]-xyz[i0+15];                                   
  By=xyz[i1+12]-xyz[i1+15];                                   
  Cx=xyz[i0+6]-xyz[i0+12];                                   
  Cy=xyz[i1+6]-xyz[i1+12];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat =1.0;
      };
                      
    };                                                 
    else                                              
    {                                                 
      if(e<=0 && e>=f)
      {
          resultat =1.0;
      };                       
    } ;                                                
  };
  /* test edge U2,U1 against V0,V1 */                             
  Bx=xyz[i0+15]-xyz[i0+9];                                   
  By=xyz[i1+15]-xyz[i1+9];                                   
  Cx=xyz[i0+6]-xyz[i0+15];                                   
  Cy=xyz[i1+6]-xyz[i1+15];                                   
  f=Ay*Bx-Ax*By;                                      
  d=By*Cx-Bx*Cy;                                      
  if((f>0 && d>=0 && d<=f) || (f<0 && d<=0 && d>=f))  
  {                                                   
    e=Ax*Cy-Ay*Cx;                                    
    if(f>0)                                           
    {                                                 
      if(e>=0 && e<=f) 
      {
        resultat =1.0;
      };                     
    }                                                 
    else                                              
    {                                                
      if(e<=0 && e>=f)
      {
        resultat =1.0;
      };                   
    } ;                                                
  } ;          
 /* finally, test if tri1 is totally contained in tri2 or vice versa */                                          
  /* is T1 completly inside T2? */          
  /* check if V0 is inside tri(U0,U1,U2) */ 
  a=xyz[i1+12]-xyz[i1+9];                          
  b=0.0-(xyz[i0+9]-xyz[i0+9]);                       
  c=(0.0-a*xyz[i0+9])-b*xyz[i1+9];                     
  d0=a*xyz[i0]+b*xyz[i1]+c;                                                      
  a=xyz[i1+15]-xyz[i1+12];                          
  b=0.0-(xyz[i0+15]-xyz[i0+12]);                       
  c=(0.0-a*xyz[i0+12])-b*xyz[i1+12];                     
  d1=a*xyz[i0]+b*xyz[i1]+c;                   
                                            
  a=xyz[i1+9]-xyz[i1+15];                         
  b= 0.0-(xyz[i0+9]-xyz[i0+15]);                       
  c= (0.0-a*xyz[i0+15])-b*xyz[i1+15];                     
  d2=a*xyz[i0]+b*xyz[i1]+c;                  
  if(d0*d1>0.0)                            
  {                                        
    if(d0*d2>0.0)
    {
      resultat =1.0;
    };          
  } ;                                       
                                          
  /* is T1 completly inside T2? */          
  /* check if V0 is inside tri(U0,U1,U2) */ 
  a=xyz[i1+3]-xyz[i1];                          
  b=-(xyz[i0+3]-xyz[i0]);                       
  c=(0.0-a*xyz[i0])-b*xyz[i1];                     
  d0=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  a=xyz[i1+6]-xyz[i1];                          
  b= 0.0-(xyz[i0+6]-xyz[i0]);                       
  c= (0.0-a*xyz[i0+3])-b*xyz[i1+3];                     
  d1=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  a=xyz[i1]-xyz[i1+6];                          
  b= 0.0-(xyz[i0]-xyz[i0+6]);                       
  c=(0.0-a*xyz[i0+6])-b*xyz[i1+6];                     
  d2=a*xyz[i0+9]+b*xyz[i1+9]+c;                   
  if(d0*d1>0.0)                             
  {                                         
    if(d0*d2>0.0)
    {
      resultat =1.0;
    };                 
  };                                         

  };
/***************************************************************************************************************************************/
  if(isect1[0]>isect1[1])    
    {          
      c=isect1[0];     
      isect1[0]=isect1[1];     
      isect1[1]=c;     
    };

    if(isect2[0]>isect2[1])    
    {          
      c=isect2[0];     
      isect2[0]=isect2[1];     
      isect2[1]=c;     
    };
  /*************************************************************************************************************************************/

 if(isect1[1]<isect2[0] || isect2[1]<isect1[0])
  {
    resultat =0.0;
  };


if(resultat == 0.0)
		{
			dataOut[0] = 0.2;
			dataOut[1] = 0.8;
		};
		else
		{
			dataOut[0] = 0.8;
			dataOut[1] = 0.2;
		};

    if(dataOut[0] < dataOut[1])
    {
			x = 0.0;
    };
		else
    {
			x = 1.0;
    };
 


















  

